/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./public/src/entry/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./public/src/css/app.scss":
/*!*********************************!*\
  !*** ./public/src/css/app.scss ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./public/src/css/app.scss?");

/***/ }),

/***/ "./public/src/entry/app.js":
/*!*********************************!*\
  !*** ./public/src/entry/app.js ***!
  \*********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/config */ \"./public/src/utils/config.js\");\n/* harmony import */ var _webrtc_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../webrtc/manager */ \"./public/src/webrtc/manager.js\");\n/* harmony import */ var _utils_strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/strings */ \"./public/src/utils/strings.js\");\n/* harmony import */ var _utils_loader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/loader */ \"./public/src/utils/loader.js\");\n/* harmony import */ var _utils_dep__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/dep */ \"./public/src/utils/dep.js\");\n\n\n\n\n\n\n__webpack_require__(/*! ../css/app.scss */ \"./public/src/css/app.scss\");\n\nconst container = document.getElementById('app');\nconst width = document.body.clientWidth ? document.body.clientWidth : window.screen.width ? window.screen.width : 800;\nconst height = document.body.scrollHeight ? document.body.scrollHeight : document.body.clientHeight ? document.body.clientHeight : window.screen.availHeigh ? window.screen.availHeigh : window.screen.height ? window.screen.height : 600; //判断用户是否有权限\n\nconst params = Object(_utils_strings__WEBPACK_IMPORTED_MODULE_2__[\"parseSearch\"])(window.location.search);\nconst cfg = _utils_config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\ncfg.initParams(params);\n\nif (!!params.roomid) {\n  const loader = new _utils_loader__WEBPACK_IMPORTED_MODULE_3__[\"Loader\"]({\n    baseUrl: '',\n    path: `/user/${params.uid}`\n  });\n  const d = _utils_dep__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getInstance();\n  d.on('complete', link);\n  loader.load();\n}\n\nfunction link(loader) {\n  let data;\n\n  try {\n    data = JSON.parse(loader.options.response);\n  } catch (e) {\n    console.log(e);\n  }\n\n  const manager = new _webrtc_manager__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n    container: container,\n    width: width,\n    height: height,\n    window: window,\n    roomId: params.roomid,\n    uid: params.uid\n  });\n} // const u_options = window.sessionStorage.getItem('room')\n\n\nif (false) {}\n\n//# sourceURL=webpack:///./public/src/entry/app.js?");

/***/ }),

/***/ "./public/src/utils/config.js":
/*!************************************!*\
  !*** ./public/src/utils/config.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Config; });\n/*\n    初始化配置参数\n    create by chenzhaofei on 2020/04/30\n*/\nclass Config {\n  constructor() {\n    this.defaultOptions = {\n      stun: ['stun1.l.google.com:19302', 'stun2.l.google.com:19302', 'stun3.l.google.com:19302', 'stun4.l.google.com:19302'],\n      websocket: 'ws://49.232.108.228:5001'\n    };\n    this.options = Object.assign({}, this.defaultOptions);\n    this.map = new WeakMap();\n  }\n\n  static getInstance() {\n    if (!Config.instance) {\n      Config.instance = new Config();\n    }\n\n    return Config.instance;\n  }\n\n  getVideoArea() {\n    if (!window) {\n      return null;\n    }\n\n    if (window.document.getElementById('userVideo')) {\n      return window.document.getElementById('userVideo');\n    }\n\n    if (window.document.getElementById('app')) {\n      return window.document.getElementById('app');\n    }\n\n    return null;\n  }\n\n  initParams(options) {\n    this.options = Object.assign(this.options, options || {});\n  }\n\n  getParam(key) {\n    if (this.options.hasOwnProperty(key)) {\n      return this.options[key];\n    }\n\n    return null;\n  }\n\n  setParam(key, value) {\n    this.options[key] = value;\n  }\n\n}\n\n//# sourceURL=webpack:///./public/src/utils/config.js?");

/***/ }),

/***/ "./public/src/utils/dep.js":
/*!*********************************!*\
  !*** ./public/src/utils/dep.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Dep; });\n/* harmony import */ var _logproxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logproxy */ \"./public/src/utils/logproxy.js\");\n\nclass Dep {\n  constructor() {\n    if (Dep.instance) {\n      throw new Error(`This is a singlon.please use \"getInstance\" to get.`);\n    }\n\n    this.events = {};\n    this.log = _logproxy__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n  }\n\n  static getInstance() {\n    if (!Dep.instance) {\n      Dep.instance = new Dep();\n    }\n\n    return Dep.instance;\n  }\n  /**\n   * 添加事件\n   * @param {String} event 事件名称\n   * @param {function} fn 事件处理函数\n   */\n\n\n  on(event, fn) {\n    if (!!!this.events[event]) {\n      //如果不存在\n      this.events[event] = [];\n    } //检查是不是存在该事件\n\n\n    const fns = this.events[event].filter(value => {\n      return value === fn;\n    });\n\n    if (fns.length > 0) {\n      this.log.warn(`Dep::on->注册事件已经存在`);\n      return;\n    } // this.log.trace(`Dep::on->注册新事件[${event}]`);\n\n\n    this.events[event].push(fn);\n  }\n  /**\n   * 关闭事件\n   * @param {*} event 事件名称 \n   * @param {*} fn 事件处理函数\n   */\n\n\n  off(event, fn) {\n    if (!!!this.events[event]) {\n      this.log.warn(`Dep::off->事件[${event}]不存在`);\n      return;\n    }\n\n    if (!!!fn) {\n      this.log.info(`Dep::off->事件[${event}]清空`);\n      this.events[event] = [];\n      delete this.events[event];\n      return;\n    }\n\n    const pos = this.events[event].indexOf(fn);\n    return this.events[event].splice(pos, 1);\n  }\n  /**\n   * 触发事件\n   * @param {*} event 事件名称\n   */\n\n\n  emit(event) {\n    const args = [].slice.call(arguments, 1);\n    const fns = this.events[event];\n\n    if (!!!fns) {\n      this.log.info(`Dep::emit->事件[${event}]不存在监听者`);\n      return;\n    } //this.log.info(`Dep::emit->事件[${event}]`,Dep.target);\n\n\n    fns.forEach(fn => {\n      fn.apply(Dep.target ? Dep.target : this, args);\n    });\n  }\n\n}\nDep.target = null;\n\n//# sourceURL=webpack:///./public/src/utils/dep.js?");

/***/ }),

/***/ "./public/src/utils/env.js":
/*!*********************************!*\
  !*** ./public/src/utils/env.js ***!
  \*********************************/
/*! exports provided: RTC, SDP, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RTC\", function() { return RTC; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SDP\", function() { return SDP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ProcessEnv; });\nconst RTC = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\nconst SDP = window.RTCSessionDescription || window.mozRTCSessionDescription || window.webkitRTCSessionDescription;\n/**\n * 支持程度：\n */\n\nconst UserMedia = navigator.getUserMedia ? navigator.getUserMedia : navigator.mozGetUserMedia ? navigator.mozGetUserMedia : navigator.webkitGetUserMedia ? navigator.webkitGetUserMedia : null;\nconst MediaDevices = navigator.mediaDevices ? navigator.mediaDevices : navigator.mozMediaDevices ? navigator.mozMediaDevices : navigator.webkitMediaDevices ? navigator.webkitMediaDevices : null;\n\nDate.prototype.Format = function (fmt) {\n  const o = {\n    'Y+': this.getFullYear(),\n    'M+': this.getMonth() + 1,\n    'D+': this.getDate(),\n    'h+': this.getHours(),\n    'm+': this.getMinutes(),\n    's+': this.getSeconds(),\n    'S+': this.getMilliseconds()\n  };\n\n  for (let v in o) {\n    const reg = new RegExp(`(${v})`);\n\n    if (reg.test(fmt)) {\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? o[v] : ('000' + o[v]).slice(-RegExp.$1.length));\n    }\n  }\n\n  return fmt;\n};\n\nString.prototype.startsWith = typeof String.prototype.startsWith === 'function' ? String.prototype.startsWith : function (prefix) {\n  return this.slice(0, prefix.length) === prefix;\n};\nString.prototype.endsWith = typeof String.prototype.endsWith === 'function' ? String.prototype.endsWith : function (endfix) {\n  return this.slice(-endfix.length) === endfix;\n};\nclass ProcessEnv {\n  constructor() {\n    if (ProcessEnv.instance) {\n      throw new Error('Instance has exit,please use getInstance!');\n    }\n\n    this.options = {\n      RTC,\n      SDP,\n      UserMedia,\n      MediaDevices\n    };\n  }\n\n  static getInstance() {\n    if (!ProcessEnv.instance) {\n      ProcessEnv.instance = new ProcessEnv();\n    }\n\n    return ProcessEnv.instance;\n  }\n\n  get isSupport() {\n    return !!RTC && !!SDP && (!!UserMedia || !!MediaDevices);\n  }\n\n  getAPI(name) {\n    return this.options[name];\n  }\n\n  getPlatForm() {\n    if (!window) return '未知设备';\n    const {\n      navigator\n    } = window;\n    const {\n      platform,\n      userAgent\n    } = navigator;\n    const pf = platform.toLowerCase();\n    const ua = userAgent.toLowerCase();\n    const isWin = pf === 'win32' || pf === 'windows';\n    const isMac = pf.startsWith('mac');\n    if (isMac) return 'mac';\n    if (pf.includes('iphone') || ua.includes('iphone')) return 'iphone';\n    if (pf.includes('android') || ua.includes('android')) return 'android';\n    if (pf === 'x11' && !isWin && !isMac) return 'unix';\n    if (pf.includes('linux')) return 'linux';\n\n    if (isWin) {\n      if (ua.includes('windows nt 5.0') || ua.includes('windows 2000')) return 'win2000';\n      if (ua.includes('windows nt 5.1') || ua.includes('windows xp')) return 'winxp';\n      if (ua.includes('windows nt 5.2') || ua.includes('windows 2003')) return 'win2003';\n      if (ua.includes('windows nt 6.0') || ua.includes('windows vista')) return 'winvista';\n      if (ua.includes('windows nt 6.1') || ua.includes('windows 7')) return 'win7';\n      return 'win';\n    }\n\n    return 'other';\n  }\n\n  setParam(key, value) {\n    this.options[key] = value;\n  }\n\n  getParam(key) {\n    if (this.options.hasOwnProperty(key)) {\n      return this.options[key];\n    }\n\n    return null;\n  }\n\n  getVersion(ua, exp, pos) {\n    const match = ua.match(exp);\n    return match && match.length >= pos && parseInt(match[pos], 10);\n  }\n\n  detectBroswer(window) {\n    const {\n      navigator\n    } = window;\n    const result = {\n      browser: null,\n      version: null\n    };\n\n    if (typeof window === 'undefined' || !navigator) {\n      result.browser = 'Not a broswer.';\n      return result;\n    }\n\n    if (navigator.mozGetUserMedia) {\n      //FireFox\n      result.browser = 'firefox';\n      result.version = this.getVersion(navigator.userAgent, /Firefox\\/(\\d+)\\./, 1);\n    } else if (navigator.webkitGetUserMedia || window.isSecureContext === false && window.webkitRTCPeerConnection && !window.RTCIceGather) {\n      //Chrome,chromium,webview,Opera.\n      result.browser = 'chrome';\n      result.version = this.getVersion(navigator.userAgent, /Chrom[e|ium]\\/(\\d+)\\./, 1);\n    } else if (navigator.MediaDevices && navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) {\n      //Edge\n      result.browser = 'edge';\n      result.version = this.getVersion(navigator.userAgent, /Edge\\/(\\d+).(\\d+)$/, 2);\n    } else if (window.RTCPeerConnection && navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n      //Safari\n      result.browser = 'safari';\n      result.version = this.getVersion(navigator.userAgent, /AppleWebKit\\/(\\d+)\\./, 1);\n    } else {\n      result.browser = 'Not a supported broswer.';\n    }\n\n    return result;\n  }\n\n  getRandomId() {\n    const time = new Date().getTime();\n    return `uid-${time}-${(Math.random() * 1000000).toFixed(0)}-${(Math.random() * 1000000).toFixed(0)}`;\n  }\n\n}\n\n//# sourceURL=webpack:///./public/src/utils/env.js?");

/***/ }),

/***/ "./public/src/utils/loader.js":
/*!************************************!*\
  !*** ./public/src/utils/loader.js ***!
  \************************************/
/*! exports provided: Loader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Loader\", function() { return Loader; });\n/* harmony import */ var _logproxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logproxy */ \"./public/src/utils/logproxy.js\");\n/* harmony import */ var _dep__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dep */ \"./public/src/utils/dep.js\");\n\n\nclass Loader {\n  constructor(options) {\n    this.defaultOptions = {\n      baseUrl: '',\n      path: '',\n      method: 'GET',\n      data: null,\n      type: 'text',\n      totalTime: 0,\n      speed: 0,\n      readyState: 0,\n      responseCode: -1,\n      response: '',\n      error: -1,\n      range: 0\n    };\n    this.options = Object.assign(this.defaultOptions, options || {});\n    this.name = this.__proto__.constructor.name;\n    this.log = _logproxy__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n    this.dep = _dep__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n    this.http = null;\n  }\n\n  load(options) {\n    this.options = Object.assign(this.options, options || {});\n    this.log.trace(`${this.name}::load->`);\n\n    if (!this.http) {\n      this.http = this.createRequest();\n    }\n\n    const this$1 = this,\n          startTime = Date.now();\n\n    this.http.onreadystatechange = function () {\n      this$1.options.readyState = this.readyState;\n\n      if (this.readyState === 4) {\n        this$1.options.responseCode = this.status;\n        this$1.options.response = this.response || '';\n        this$1.options.totalTime = Date.now() - startTime;\n\n        if (this.status >= 200 && this.status < 300) {\n          this$1.options.error = 200;\n        }\n\n        this$1.dep.emit('complete', this$1);\n      }\n    };\n\n    let urls = [];\n\n    if (!!this.options.baseUrl) {\n      urls.push(this.options.baseUrl);\n    }\n\n    if (!!this.options.path) {\n      urls.push(this.options.path);\n    }\n\n    this.http.open(this.options.method, urls.join(''));\n\n    if (!!this.options.range) {\n      this.http.setRequestHeader('range', this.options.range);\n    }\n\n    this.http.responseType = this.options.type;\n    this.http.send(this.options.data);\n  }\n\n  createRequest() {\n    let objXMLHttpRequest;\n\n    if (window.XMLHttpRequest) {\n      objXMLHttpRequest = new XMLHttpRequest();\n\n      if (objXMLHttpRequest.overrideMimeType) {\n        objXMLHttpRequest.overrideMimeType = this.options.type;\n      }\n    } else if (window.ActiveXObject) {\n      //IE\n      const activeXNameList = [\"Msxml2.XMLHTTP.6.0\", \"Msxml2.XMLHTTP.5.0\", \"Msxml2.XMLHTTP.4.0\", \"Msxml2.XMLHTTP.3.0\", \"Msxml2.XMLHTTP\", \"Microsoft.XMLHTTP\"];\n      let i = activeXNameList.length;\n\n      while (i--) {\n        try {\n          objXMLHttpRequest = new ActiveXObject(activeXNameList[i]);\n        } catch (e) {\n          continue;\n        }\n\n        if (objXMLHttpRequest) {\n          break;\n        }\n      }\n    }\n\n    return objXMLHttpRequest;\n  }\n\n}\n\n//# sourceURL=webpack:///./public/src/utils/loader.js?");

/***/ }),

/***/ "./public/src/utils/logproxy.js":
/*!**************************************!*\
  !*** ./public/src/utils/logproxy.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return LogProxy; });\n/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./env */ \"./public/src/utils/env.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ \"./public/src/utils/config.js\");\n\n\nclass LogProxy {\n  constructor(options) {\n    if (LogProxy.instance) {\n      throw new Error('This is a Singlon,Instance has exit please use getInstance!');\n    }\n\n    this.defaultOptions = {\n      level: 15,\n      TRACE: 8,\n      INFO: 4,\n      WARN: 2,\n      ERROR: 1\n    };\n    this.options = Object.assign(this.defaultOptions, options || {});\n    this.env = _env__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n    this.cache = [];\n  }\n\n  static getInstance() {\n    if (!LogProxy.instance) {\n      LogProxy.instance = new LogProxy();\n    }\n\n    return LogProxy.instance;\n  }\n\n  trace(...rest) {\n    if ((this.options.level & this.defaultOptions.TRACE) >> 3 === 1) {\n      if (this.logBar) this.outLog(0, ...rest);\n      console.log(`[${new Date().Format('YYYY-MM-DD hh:mm:ss.SSS')}]`, ...rest);\n    }\n  }\n\n  info(...rest) {\n    if ((this.options.level & this.defaultOptions.INFO) >> 2 === 1) {\n      if (this.logBar) this.outLog(1, ...rest);\n      console.log(`[${new Date().Format('YYYY-MM-DD hh:mm:ss.SSS')}]`, ...rest);\n    }\n  }\n\n  warn(...rest) {\n    if ((this.options.level & this.defaultOptions.WARN) >> 1 === 1) {\n      if (this.logBar) this.outLog(2, ...rest);\n      console.log(`[${new Date().Format('YYYY-MM-DD hh:mm:ss.SSS')}]`, ...rest);\n    }\n  }\n\n  error(...rest) {\n    if ((this.options.level & this.defaultOptions.ERROR) === 1) {\n      if (this.logBar) this.outLog(3, ...rest);\n      console.log(`[${new Date().Format('YYYY-MM-DD hh:mm:ss.SSS')}]`, ...rest);\n    }\n  }\n\n  outLog(...rest) {\n    const colors = ['gray', 'white', 'orange', 'red'];\n    const str = [];\n    const color = colors[rest[0]];\n\n    for (let i = 1; i < rest.length; i++) {\n      str.push(typeof rest[i] === 'object' ? JSON.stringify(rest[i]) : rest[i].toString());\n    }\n\n    this.cache.push(`<span style='{color:${color}}'>${str.join('')}</span>`);\n\n    if (this.cache.length > 100) {\n      this.cache.shift();\n    }\n\n    this.logBar.innerHTML = this.cache.join('<br/>');\n  }\n\n}\n\n//# sourceURL=webpack:///./public/src/utils/logproxy.js?");

/***/ }),

/***/ "./public/src/utils/strings.js":
/*!*************************************!*\
  !*** ./public/src/utils/strings.js ***!
  \*************************************/
/*! exports provided: parseSearch, throttle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseSearch\", function() { return parseSearch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"throttle\", function() { return throttle; });\nfunction parseSearch(value) {\n  const _params = value.split(/\\?|&/);\n\n  let _kvs,\n      _obj = {};\n\n  _params.forEach(el => {\n    if (!!el) {\n      _kvs = el.split('=');\n      _obj[_kvs[0]] = _kvs.length > 1 ? _kvs[1] : _kvs[0];\n    }\n  });\n\n  return _obj;\n}\nfunction throttle(fn, delay) {\n  let pre = 0;\n  return function () {\n    if (Date.now() - pre >= delay) {\n      pre = Date.now();\n      const value = fn.apply(this, arguments);\n    }\n  };\n}\n\n//# sourceURL=webpack:///./public/src/utils/strings.js?");

/***/ }),

/***/ "./public/src/webrtc/VideoEvents.js":
/*!******************************************!*\
  !*** ./public/src/webrtc/VideoEvents.js ***!
  \******************************************/
/*! exports provided: VideoEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VideoEvent\", function() { return VideoEvent; });\nconst VideoEvent = [\"abort\", // 当音频/视频的加载已放弃时\n\"canplay\", // 当浏览器可以播放音频/视频时\n\"canplaythrough\", // 当浏览器可在不因缓冲而停顿的情况下进行播放时\n\"durationchange\", // 当音频/视频的时长已更改时\n\"emptied\", // 当目前的播放列表为空时\n\"empty\", \"ended\", // 当目前的播放列表已结束时\n\"error\", // 当在音频/视频加载期间发生错误时\n\"loadeddata\", // 当浏览器已加载音频/视频的当前帧时\n\"loadedmetadata\", // 当浏览器已加载音频/视频的元数据时\n\"loadstart\", // 当浏览器开始查找音频/视频时\n\"pause\", // 当音频/视频已暂停时\n\"play\", // 当音频/视频已开始或不再暂停时\n\"playing\", // 当音频/视频在已因缓冲而暂停或停止后已就绪时\n\"progress\", // 当浏览器正在下载音频/视频时\n\"ratechange\", // 当音频/视频的播放速度已更改时\n\"seeked\", // 当用户已移动/跳跃到音频/视频中的新位置时\n\"seeking\", // 当用户开始移动/跳跃到音频/视频中的新位置时\n\"stalled\", // 当浏览器尝试获取媒体数据，但数据不可用时\n\"suspend\", // 当浏览器刻意不获取媒体数据时\n\"timeupdate\", // 当目前的播放位置已更改时\n\"volumechange\", // 当音量已更改时\n\"waiting\"];\n\n//# sourceURL=webpack:///./public/src/webrtc/VideoEvents.js?");

/***/ }),

/***/ "./public/src/webrtc/manager.js":
/*!**************************************!*\
  !*** ./public/src/webrtc/manager.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Manager; });\n/* harmony import */ var _utils_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/env */ \"./public/src/utils/env.js\");\n/* harmony import */ var _room__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./room */ \"./public/src/webrtc/room.js\");\n/* harmony import */ var _webrtc_session__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../webrtc/session */ \"./public/src/webrtc/session.js\");\n/* harmony import */ var _utils_dep__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/dep */ \"./public/src/utils/dep.js\");\n\n\n\n\nclass Manager {\n  constructor(options) {\n    this.id = _utils_env__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance().getRandomId();\n    this.defaultOptions = {\n      sessionId: null\n    };\n    this.options = Object.assign({}, this.defaultOptions, options || {});\n    this.dep = _utils_dep__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getInstance();\n    this.session = null;\n    this.room = null;\n\n    this.onOpen = () => {\n      this.enterRoom();\n    };\n\n    this.init();\n  }\n\n  init() {\n    const options = Object.assign({}, this.options, {\n      id: this.id,\n      parent: this\n    });\n    this.dep.on('onopen', this.onOpen);\n    this.session = new _webrtc_session__WEBPACK_IMPORTED_MODULE_2__[\"default\"](options);\n  }\n\n  enterRoom() {\n    this.room = new _room__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ ...this.options,\n      id: this.id\n    });\n  }\n\n  closeRoom(params) {\n    this.session.destroy();\n    this.session = null;\n    this.room.destroy();\n    this.room = null;\n    this.dep.off('onopen', this.onOpen);\n    this.onOpen = null;\n    this.dep = null;\n    this.options = null;\n  }\n\n}\n\n//# sourceURL=webpack:///./public/src/webrtc/manager.js?");

/***/ }),

/***/ "./public/src/webrtc/peer.js":
/*!***********************************!*\
  !*** ./public/src/webrtc/peer.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Peer; });\n/* harmony import */ var _utils_logproxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/logproxy */ \"./public/src/utils/logproxy.js\");\n/* harmony import */ var _utils_dep__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/dep */ \"./public/src/utils/dep.js\");\n/* harmony import */ var _utils_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/env */ \"./public/src/utils/env.js\");\n\n\n\nclass Peer {\n  constructor(options) {\n    this.defaultOptions = {\n      stun: ['stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302', 'stun:stun3.l.google.com:19302', 'stun:stun4.l.google.com:19302', 'stun:23.21.150.121', 'stun:stun01.sipphone.com', 'stun:stun.ekiga.net', 'stun:stun.fwdnet.net', 'stun:stun.ideasip.com', 'stun:stun.iptel.org', 'stun:stun.rixtelecom.se', 'stun:stun.schlund.de', 'stun:stunserver.org', 'stun:stun.softjoys.com', 'stun:stun.voiparound.com', 'stun:stun.voipbuster.com', 'stun:stun.voipstunt.com', 'stun:stun.voxgratia.org', 'stun:stun.xten.com'],\n      remoteid: null,\n      // 对方id\n      server: 0,\n      //0主动，1被动\n      ice: null,\n      channel: null,\n      connectState: null,\n      stream: null\n    };\n    this.options = Object.assign(this.defaultOptions, options || {});\n    this.name = this.__proto__.constructor.name;\n    this.peer = null;\n    this.log = _utils_logproxy__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n    this.dep = _utils_dep__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n    this.iceOptions = null;\n    this.iceServers = null;\n    this.init();\n  }\n\n  init() {\n    this.log.trace(`${this.name}::init->remoteId(${this.options.remoteid})`);\n    this.iceServers = [];\n    let i = 2,\n        pos;\n\n    while (i--) {\n      pos = Math.floor(Math.random() * this.options.stun.length);\n      this.iceServers.push({\n        url: `${this.options.stun[pos]}?transport=udp`\n      });\n    }\n\n    this.iceOptions = {\n      'optional': []\n    };\n    this.offerOptions = {\n      offerToReceiveAudio: true,\n      offerToReceiveVideo: true\n    };\n  }\n\n  connect() {\n    this.log.trace(`${this.name}::connect,server(${this.options.server})`);\n    this.peer = new _utils_env__WEBPACK_IMPORTED_MODULE_2__[\"RTC\"]({\n      iceServers: this.iceServers\n    }, this.iceOptions); //检查是否符合推流\n\n    this.dep.on('openLocalStream', data => {\n      this.addStream(data);\n    });\n    this.dep.on('closeLocalStream', data => {\n      this.removeStream(data);\n    });\n    this.dep.emit('pushStream', {\n      remoteid: this.options.remoteid\n    }); //增加事件\n\n    this.peer.onnegotiationneeded = () => {\n      this.onReNegotiation();\n    };\n\n    this.peer.onicecandidate = evt => {\n      this.onPeerIceCandidate(evt);\n    };\n\n    this.peer.onaddstream = evt => {\n      this.onAddStream(evt);\n    };\n\n    this.peer.onremovestream = evt => {\n      this.onRemoveStream(evt);\n    };\n\n    this.peer.ontrack = evt => {\n      this.onAddTrack(evt);\n    }; //this.peer.ondatachannel = (evt) =>{this.onDataChannel(evt)}\n\n\n    this.peer.oniceconnectionstatechange = evt => {\n      this.onIceConnectionStateChange(evt);\n    };\n\n    this.peer.onsignalingstatechange = evt => {\n      this.onSignalingChange(evt);\n    };\n\n    if (this.options.server === 0) {\n      // this.options.channel = this.peer.createDataChannel('channel');\n      // this.options.channel.onopen = evt=>{this.onChannelOpen(evt)};\n      // this.options.channel.onmessage = evt=> {this.onChannelMessage(evt)};\n      // this.options.channel.onerror = evt=>{this.onChannelError(evt)};\n      // this.options.channel.onclose = evt=>{ this.onChannelClose(evt)};\n      this.createOffer();\n    } else {\n      this.createAnswer();\n    }\n  }\n\n  createOffer(offerOptions) {\n    if (this.options.remoteOffer) {\n      this.peer.setRemoteDescription(this.options.remoteOffer);\n    }\n\n    const ops = offerOptions || this.offerOptions;\n    this.peer.createOffer(ops).then(offer => {\n      this.log.trace(`${this.name}::createOffer-> ok`);\n      this.peer.setLocalDescription(offer);\n      this.options.offer = offer;\n      this.sendTransit({\n        action: 'connRequest'\n      });\n    }).catch(err => {\n      this.log.error(`${this.name}::createOffer fail!`);\n    });\n  }\n\n  createAnswer(offerOptions) {\n    if (this.options.remoteOffer) {\n      this.log.trace(`${this.name}::createAnswer->signalingState(${this.options.signalingState})`);\n      this.peer.setRemoteDescription(this.options.remoteOffer);\n    }\n\n    this.peer.createAnswer(offerOptions).then(answer => {\n      this.log.trace(`${this.name}::createAnswer-> local(${this.options.id}) ok`);\n      this.peer.setLocalDescription(answer);\n      this.options.offer = answer;\n      this.sendTransit({\n        action: 'connResponse'\n      });\n    }).catch(err => {\n      this.log.error(`${this.name}::createAnswer fail!`, err);\n    });\n  }\n\n  acceptAnswerOrOffer(data) {\n    this.log.trace(`${this.name}::acceptAnswer local(${this.options.id}),remote(${this.options.remoteid})`);\n    this.peer.setRemoteDescription(data.remoteOffer);\n  }\n\n  addStream(data) {\n    console.log(this);\n    this.log.trace(`${this.name}::addStream`, data);\n\n    if (this.options.signalingState === 'closed') {\n      this.peer.restartIce();\n      return;\n    }\n\n    if (data) {\n      this.peer.addStream(data.stream);\n    }\n  }\n\n  removeStream(data) {\n    this.log.trace(`${this.name}::removeStream`);\n    this.peer.removeStream(data.stream);\n  } // addTrack(stream){\n  //     this.log.trace(`${this.name}::addTrack`)\n  //     const tracks = stream.getTracks();\n  //     tracks.forEach(track=>{\n  //         stream.addTrack(track);\n  //         this.peer.addTrack(track,stream);\n  //     })\n  //     // this.peer.addStream(stream);\n  // }\n\n\n  onAddStream(data) {\n    this.log.trace(`${this.name}::onAddStream`, data);\n    this.options.stream = data.stream;\n    this.dep.emit('addStream', {\n      id: this.options.remoteid,\n      stream: data.stream,\n      remoteid: this.options.remoteid\n    });\n  }\n\n  onRemoveStream(data) {\n    this.log.trace(`${this.name}::onremoveStream`, data, this.peer);\n    this.dep.emit('closeStream', {\n      id: this.options.remoteid,\n      remoteid: this.options.remoteid\n    });\n  }\n\n  onAddTrack(data) {\n    return;\n    this.log.trace(`${this.name}::onAddTrack`, data);\n    this.options.stream = this.options.stream || data.streams[0]; // this.options.stream.addTrack(data.track);\n\n    this.dep.emit('addStream', {\n      id: this.options.remoteid,\n      stream: this.options.stream,\n      type: 1\n    });\n  }\n\n  onReNegotiation() {\n    this.log.trace(`${this.name}::onReNegotiation connectState(${this.options.connectState}),signalingState(${this.options.signalingState})`);\n\n    if (this.options.connectState === 'connected' && this.options.signalingState === 'stable') {\n      //重新握手前需要删掉baocun sdp；\n      this.options.remoteOffer = null;\n\n      if (this.options.server === 0) {\n        this.createOffer({\n          iceRestart: true\n        });\n      } else {\n        this.sendTransit({\n          action: 'reshake'\n        });\n      }\n    }\n  }\n\n  onPeerIceCandidate(evt) {\n    if (evt.candidate) {\n      this.options.ice = evt.candidate;\n      this.sendTransit({\n        action: 'ice'\n      });\n    }\n  }\n\n  onDataChannel(evt) {\n    this.log.trace(`${this.name}::onDataChannel`);\n    if (!!!this.options.channel) this.options.channel = evt.dataChannel;\n  }\n\n  onIceConnectionStateChange(evt) {\n    this.options.connectState = this.peer.iceConnectionState;\n    this.log.trace(`${this.name}::onIceConnectionStateChange->(${this.options.remoteid})${this.options.connectState}`);\n\n    switch (this.options.connectState) {\n      case 'connected':\n        break;\n\n      case 'checking':\n        break;\n\n      case 'disconnected':\n        break;\n\n      case 'failed':\n      case 'closed':\n        break;\n    }\n  }\n\n  onSignalingChange(evt) {\n    this.options.signalingState = this.peer.signalingState;\n    this.log.trace(`${this.name}::onSignalingChange->${this.options.signalingState}`);\n  }\n  /**\n   * channel\n   */\n\n\n  onChannelOpen(evt) {\n    this.log.trace(`${this.name}::onDataOpen`);\n  }\n\n  onChannelMessage(evt) {\n    this.log.trace(`${this.name}::onDataMessage`);\n  }\n\n  onChannelError(evt) {\n    this.log.trace(`${this.name}::onDataError`);\n  }\n\n  onChannelClose(evt) {\n    this.log.trace(`${this.name}::onDataClose`);\n  }\n\n  sendTransit(data) {\n    const defaultData = {\n      error: 0,\n      action: data.action,\n      ice: this.options.ice,\n      remoteOffer: this.options.offer,\n      remoteid: this.options.remoteid,\n      id: this.options.id\n    };\n    const msg = Object.assign(defaultData, data);\n    this.dep.emit('peerMessage', {\n      type: 'peerMessage',\n      data: msg\n    });\n  }\n\n  close() {\n    this.options = null;\n    this.name = null;\n    this.peer.onnegotiationneeded = null;\n    this.peer.onicecandidate = null;\n    this.peer.onaddstream = null; //this.peer.ondatachannel = (evt) =>{this.onDataChannel(evt)}\n\n    this.peer.oniceconnectionstatechange = null;\n    this.peer.onsignalingchange = null;\n    this.peer = null;\n    this.log = null;\n    this.dep.off('openLocalStream');\n    this.dep.off('closeLocalStream');\n    this.dep = null;\n    this.iceOptions = null;\n    this.iceServers = null;\n  }\n\n}\n\n//# sourceURL=webpack:///./public/src/webrtc/peer.js?");

/***/ }),

/***/ "./public/src/webrtc/room.js":
/*!***********************************!*\
  !*** ./public/src/webrtc/room.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Room; });\n/* harmony import */ var _utils_logproxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/logproxy */ \"./public/src/utils/logproxy.js\");\n/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stream */ \"./public/src/webrtc/stream.js\");\n/* harmony import */ var _utils_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/env */ \"./public/src/utils/env.js\");\n/* harmony import */ var _utils_dep__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/dep */ \"./public/src/utils/dep.js\");\n/* harmony import */ var _webrtc_VideoEvents_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../webrtc/VideoEvents.js */ \"./public/src/webrtc/VideoEvents.js\");\n/* harmony import */ var _utils_strings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/strings */ \"./public/src/utils/strings.js\");\n\n\n\n\n\n\nclass Room {\n  constructor(options) {\n    this.defaultoptions = {\n      id: null,\n      maxAllowlink: 2,\n      container: null,\n      mainScreen: null,\n      child: null,\n      width: 400,\n      height: 300,\n      window: null\n    };\n    this.options = Object.assign({}, this.defaultoptions, options || {});\n    this.name = this.__proto__.constructor.name;\n    this.log = _utils_logproxy__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n    this.env = _utils_env__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n    this.dep = _utils_dep__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getInstance();\n\n    this.push = data => this.addMedia(data);\n\n    this.remove = data => this.removeMedia(data);\n\n    this.stream = null;\n    this.mediaStream = null;\n    this.mediaContainer = new Map(); //包含id,video\n\n    this.init();\n  }\n\n  init() {\n    //初始化\n    this.stream = new _stream__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n      window: this.options.window\n    }); //注册视频事件监听\n\n    this.dep.on('addStream', this.push);\n    this.dep.on('closeStream', this.remove);\n    _webrtc_VideoEvents_js__WEBPACK_IMPORTED_MODULE_4__[\"VideoEvent\"].forEach(item => {\n      this.dep.on(item, this.events);\n    }); //初始化容器\n\n    const wid = this.options.width || 400;\n    const hei = this.options.height || 300;\n    this.log.info(`初始化room.并构建.main和.child container_size(${wid}*${hei})`);\n    const doc = this.options.window.document;\n    const main = this.options.mainScreen = doc.createElement('div');\n    main.setAttribute('class', 'main');\n    const child = this.options.child = doc.createElement('div');\n    child.setAttribute('class', 'child');\n    const container = this.options.container;\n\n    if (!!container) {\n      container.style.height = `${hei}px`;\n      container.appendChild(main);\n      container.appendChild(child);\n      this.createToolBar(container);\n      return;\n    }\n\n    this.log.error(`初始化room失败，请传入[container].`);\n  }\n\n  createToolBar(container) {\n    this.log.trace(`${this.name}::createToolBar->`);\n    const doc = this.options.window ? this.options.window.document : '';\n\n    if (!!doc) {\n      const toolBar = doc.createElement('div');\n      toolBar.setAttribute('class', 'toolBar'); ///创建标题栏目\n\n      const top = doc.createElement('top');\n      top.setAttribute('class', 'top');\n      toolBar.appendChild(top);\n      const main = doc.createElement('div');\n      main.setAttribute('class', 'main');\n      top.appendChild(main);\n      const blank = doc.createElement('div');\n      blank.setAttribute('class', 'blank');\n      top.appendChild(blank);\n      const title = doc.createElement('div');\n      title.setAttribute('class', 'title');\n      title.innerText = `房间ID:${this.options.id}`;\n      main.appendChild(title);\n      const tools = doc.createElement('div');\n      tools.setAttribute('class', 'tools');\n      main.appendChild(tools);\n      const on = Object(_utils_strings__WEBPACK_IMPORTED_MODULE_5__[\"throttle\"])(evt => this.onClick(evt), 2000);\n      const tb = [{\n        text: '视频',\n        class: 'videoButton',\n        click: on\n      }, {\n        text: '桌面',\n        class: 'shareButton',\n        click: on\n      }];\n      this.pf = this.env.getPlatForm();\n\n      if (this.pf === 'iphone' || this.pf === 'android' // || this.pf === 'mac'\n      ) {\n          tb.push({\n            text: 'LOG',\n            class: 'logButton',\n            click: on\n          });\n          const log = doc.createElement('div');\n          log.setAttribute('class', 'log');\n          toolBar.appendChild(log);\n          this.log.logBar = log;\n        }\n\n      let bt; ///增加视频和桌面两个按钮\n\n      for (let i = 0; i < tb.length; i++) {\n        bt = doc.createElement('button');\n        bt.setAttribute('class', tb[i].class);\n        bt.id = i;\n        bt.innerText = tb[i].text;\n        bt.addEventListener('click', tb[i].click);\n        tools.appendChild(bt);\n      }\n\n      container.appendChild(toolBar);\n    }\n  }\n\n  onClick(evt) {\n    const target = evt.currentTarget;\n    let media;\n    this.log.trace(`${this.name}::onClick->id(${target.id}),text(${target.innerText})`);\n\n    switch (target.id) {\n      case '0':\n        this.closeTrack();\n\n        if (target.innerText === '视频') {\n          target.innerText = '关闭';\n          media = this.stream.getUserMedia();\n        } else {\n          target.innerText = '视频';\n          this.dep.emit('closeLocalStream', this.mediaStream);\n          this.mediaStream = null;\n        }\n\n        break;\n\n      case '1':\n        this.closeTrack();\n        media = this.stream.getDesktop();\n        break;\n\n      case '2':\n        const log = this.log.logBar;\n\n        if (log.style.display !== 'none') {\n          log.style.display = 'none';\n        } else {\n          log.style.display = 'block';\n        }\n\n        break;\n    }\n\n    media && media.then(value => {\n      this.mediaStream = {\n        id: this.options.id,\n        stream: value.stream\n      };\n      this.dep.emit('openLocalStream', this.mediaStream);\n      this.addMedia(this.mediaStream);\n    });\n  }\n  /**\n   * 添加一个流到容器中\n   */\n\n\n  addMedia(stream) {\n    if (!!!this.options.videos) {\n      this.options.videos = new Map();\n    } //检查流是否存在，存在删除原来流\n\n\n    let us = {};\n\n    if (this.options.mainScreen.childNodes.length === 0) {\n      //添加到主流视频窗\n      us.type = 0;\n    } else {\n      us.type = 1;\n    }\n\n    if (!!this.mediaContainer.get(stream.id)) {\n      us = this.mediaContainer.get(stream.id);\n      this.closeTrack(us);\n\n      if (us.type === 0) {\n        //添加到主流视频窗\n        this.options.mainScreen.removeChild(us.video);\n      } else {\n        this.options.child.removeChild(us.video);\n      }\n    }\n\n    us = Object.assign(us, stream);\n\n    if (!!!us.video) {\n      us.video = this.createVideo(us.id);\n    }\n\n    this.mediaContainer.set(stream.id, us);\n\n    if (us.type === 0) {\n      //主流\n      this.options.mainScreen.appendChild(us.video);\n    } else {\n      us.video.setAttribute('class', 'childVideo');\n      this.options.child.appendChild(us.video);\n    }\n\n    us.video.srcObject = us.stream;\n  }\n\n  get getMediaStream() {\n    return this.mediaStream;\n  }\n\n  removeMedia(data) {\n    const us = this.mediaContainer.get(data.id);\n\n    if (us) {\n      this.log.trace(`${this.name}::removeMedia`);\n      this.closeTrack(us);\n\n      if (us.type === 0) {\n        //主流appendChild();\n        this.options.mainScreen.removeChild(us.video);\n      } else {\n        this.options.child.removeChild(us.video);\n      }\n\n      this.mediaContainer.delete(data.id);\n    }\n  }\n\n  closeTrack(value) {\n    if (!!!value) {\n      value = this.mediaContainer.get(this.options.id);\n    }\n\n    if (value && value.video && value.video.srcObject) {\n      const _stream = value.video.srcObject;\n\n      const _track = _stream.getTracks();\n\n      if (_track) {\n        _track.forEach(track => track.stop());\n      }\n\n      value.video.srcObject = null;\n    }\n  }\n\n  createVideo(id) {\n    const doc = this.options.window.document;\n    let video = doc.createElement('video');\n    video.style.width = '100%';\n    video.style.height = '100%';\n    video.setAttribute('id', id);\n    video.setAttribute('autoplay', 'autoplay');\n    video.setAttribute('muted', true);\n    video.setAttribute('controls', true);\n\n    for (let i = 0; i < _webrtc_VideoEvents_js__WEBPACK_IMPORTED_MODULE_4__[\"VideoEvent\"].length; i++) {\n      video.addEventListener(_webrtc_VideoEvents_js__WEBPACK_IMPORTED_MODULE_4__[\"VideoEvent\"][i], evt => {\n        this.dep.emit(_webrtc_VideoEvents_js__WEBPACK_IMPORTED_MODULE_4__[\"VideoEvent\"][i], evt);\n      });\n    }\n\n    return video;\n  }\n\n  events(evt) {\n    const video = evt.currentTarget;\n\n    switch (evt.type) {\n      case 'canplay':\n        video.setAttribute('muted', true);\n        video.play();\n    }\n  }\n  /**\n   * 销毁\n   */\n\n\n  destroy() {\n    this.dep.off('addStream', this.push);\n    this.dep.off('closeStream', this.remove);\n    _webrtc_VideoEvents_js__WEBPACK_IMPORTED_MODULE_4__[\"VideoEvent\"].forEach(item => {\n      this.dep.off(item, this.events);\n    });\n    this.dep = null;\n    this.log = null;\n    this.env = null;\n    this.stream.destroy();\n    this.stream = null;\n    this.mediaStream = null;\n    this.mediaContainer = null;\n  }\n\n}\n\n//# sourceURL=webpack:///./public/src/webrtc/room.js?");

/***/ }),

/***/ "./public/src/webrtc/session.js":
/*!**************************************!*\
  !*** ./public/src/webrtc/session.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Session; });\n/* harmony import */ var _utils_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/env */ \"./public/src/utils/env.js\");\n/* harmony import */ var _utils_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/config */ \"./public/src/utils/config.js\");\n/* harmony import */ var _utils_logproxy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/logproxy */ \"./public/src/utils/logproxy.js\");\n/* harmony import */ var _utils_dep__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/dep */ \"./public/src/utils/dep.js\");\n/* harmony import */ var _peer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./peer */ \"./public/src/webrtc/peer.js\");\n/* flow */\n\n\n\n\n\nclass Session {\n  constructor(options) {\n    this.defaultOptions = {};\n    this.env = _utils_env__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n    this.log = _utils_logproxy__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n    this.dep = _utils_dep__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getInstance();\n    this.cfg = _utils_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n    this.name = this.__proto__.constructor.name;\n    this.options = Object.assign({}, this.defaultOptions, options || {});\n    this.guests = null;\n    this.peers = new Map();\n    this.ws = null;\n    this.isOpen = false;\n\n    this.send = data => {\n      this.sendMessage(data);\n    };\n\n    this.push = data => {\n      this.pushStream(data);\n    };\n\n    this.init();\n  }\n\n  init() {\n    const WebSocket = this.options.window.WebSocket;\n    this.ws = new WebSocket(this.cfg.getParam('websocket'));\n\n    this.ws.onopen = () => this.onOpen();\n\n    this.ws.onerror = () => this.onError();\n\n    this.ws.onmessage = data => this.onMessage(data);\n\n    this.ws.onclose = () => this.onClose(); //peer\n    //增加事件\n\n\n    this.dep.on('peerMessage', this.send);\n    this.dep.on('pushStream', this.push); //获取视频\n  }\n\n  onOpen() {\n    if (this.isOpen) return;\n    this.isOpen = true;\n    this.dep.emit('onopen'); //注册信令\n\n    this.sendMessage({\n      type: 'register'\n    });\n  }\n\n  sendMessage(msg) {\n    const type = msg.type;\n    const data = Object.assign({\n      id: this.options.id,\n      roomid: this.options.roomId\n    }, msg.data || {});\n    msg.data = data;\n    this.ws.send(JSON.stringify(msg));\n  }\n\n  onMessage(res) {\n    const data = res.data;\n    this.dep.emit('onmessage', data);\n    const msg = JSON.parse(data);\n\n    if (msg.data.error !== 0) {\n      this.log.error(`${this.name}::onMessage-> ${msg.type}:${msg.data.message}`);\n      return;\n    }\n\n    let old;\n\n    switch (msg.type) {\n      case 'register':\n        this.log.trace(`${this.name}::onMessage-> register ${msg.data.message}`); //发送信令查询用户\n\n        this.sendMessage({\n          type: 'getGuestList'\n        });\n        break;\n\n      case 'onGuestList':\n        //根据列表创建peer\n        old = this.guests || [];\n        const ngl = msg.data.list || [];\n        this.guests = new Set([...old, ...ngl]);\n        this.log.trace(`${this.name}::onMessage-> onGuestList ${this.guests.size}`); ///去创建peer\n\n        this.guests.forEach(id => {\n          if (!this.peers.has(id) && id !== this.options.id) {\n            this.createPeer(id);\n          }\n        });\n        break;\n\n      case 'enter':\n        //有新用户进入房间\n        old = this.guests || [];\n        this.log.trace(`${this.name}::onMessage->用户（${msg.data.id}）进入`);\n        this.guests = new Set([...old, msg.data.id]); // this.createPeer(msg.id);\n        //去创建\n\n        break;\n\n      case 'exit':\n        if (this.guests && this.guests.delete(msg.data.id)) {\n          this.log.trace(`${this.name}::onMessage->用户离开（${msg.data.id}）`); //关闭该peer\n\n          this.closePeer([msg.data.id]);\n        }\n\n        break;\n\n      case 'peerMessage':\n        this.onPeerMessage(msg.data);\n        break;\n\n      case 'response':\n        break;\n    }\n  }\n\n  onPeerMessage(data) {\n    let peer;\n\n    switch (data.action) {\n      case 'connRequest':\n        //检查peer是否存在\n        peer = this.peers.get(data.id);\n\n        if (!peer) {\n          peer = new _peer__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n            remoteid: data.id,\n            id: this.options.id,\n            server: 1,\n            remoteOffer: data.remoteOffer\n          });\n          this.peers.set(data.id, peer);\n          peer.connect();\n        } else {\n          this.log.info(`${this.name}::onPeerMessage::connrequest->重新握手`);\n          peer.options.remoteOffer = data.remoteOffer;\n          peer.createAnswer();\n          break;\n        }\n\n        break;\n\n      case 'connResponse':\n        peer = this.peers.get(data.id);\n\n        if (peer) {\n          if (peer.options.remoteOffer) {\n            //证明需要重新握手\n            peer.options.remoteOffer = data.remoteOffer;\n            peer.createOffer();\n          } else {\n            peer.acceptAnswerOrOffer(data);\n          }\n        }\n\n        break;\n\n      case 'ice':\n        peer = this.peers.get(data.id);\n\n        if (peer) {\n          peer.peer.addIceCandidate(data.ice);\n        }\n\n        break;\n\n      case 'reshake':\n        peer = this.peers.get(data.id);\n\n        if (peer) {\n          peer.createOffer({\n            iceRestart: true\n          });\n        }\n\n        break;\n    }\n  }\n\n  createPeer(id) {\n    let peer = new _peer__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n      remoteid: id,\n      id: this.options.id\n    });\n    this.peers.set(id, peer);\n    peer.connect();\n  }\n  /**\n   * 是否符合推流\n   */\n\n\n  pushStream(data) {\n    if (this.options.parent) {\n      const room = this.options.parent.room;\n      const stream = room.getMediaStream;\n      const peer = this.peers.get(data.remoteid);\n      console.log(stream, peer, this.peers);\n\n      if (stream && peer) {\n        peer.addStream(stream);\n      }\n    }\n  }\n\n  pushTrack(data) {\n    if (this.options.parent) {\n      const room = this.options.parent.room;\n      const stream = room.getMediaStream ? room.getMediaStream.stream ? room.getMediaStream.stream : new MediaStream() : new MediaStream();\n      const peer = this.peers.get(data.id);\n\n      if (peer) {\n        peer.addTrack(stream);\n      }\n    }\n  }\n\n  closePeer(ids) {\n    ids.forEach(id => {\n      const peer = this.peers.get(id);\n      if (peer) peer.close();\n      this.peers.delete(id);\n    });\n    this.log.trace(`${this.name}::closePeer->id(${this.ids})`);\n  }\n\n  onError(err) {\n    this.log.error(`${this.name}::onError-> err:${err.toString()}`);\n    this.dep.emit('onerror', this);\n  }\n\n  onClose() {\n    this.log.trace(`${this.name}::onClose`);\n    this.dep.emit('onclose', this);\n  }\n\n  destroy() {\n    this.closePeer([...this.guests]);\n    this.peers = null;\n    this.dep.off('peerMessage', this.send);\n    this.dep.off('pushStream', this.push);\n    this.send = null;\n    this.push = null;\n    this.dep = null;\n    this.guests = null;\n    this.log = null;\n    this.cfg = null;\n    this.env = null;\n    this.ws.close(200, '关闭');\n    this.ws.onopen = null;\n    this.ws.onerror = null;\n    this.ws.onmessage = null;\n    this.ws.onclose = null;\n    this.ws = null;\n    this.isOpen = false;\n  }\n\n}\n\n//# sourceURL=webpack:///./public/src/webrtc/session.js?");

/***/ }),

/***/ "./public/src/webrtc/stream.js":
/*!*************************************!*\
  !*** ./public/src/webrtc/stream.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return LocalStream; });\n/* harmony import */ var _utils_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/config */ \"./public/src/utils/config.js\");\n/* harmony import */ var _utils_env_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/env.js */ \"./public/src/utils/env.js\");\n/* harmony import */ var _utils_logproxy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/logproxy */ \"./public/src/utils/logproxy.js\");\n/* harmony import */ var _usermedia__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./usermedia */ \"./public/src/webrtc/usermedia.js\");\n\n\n\n\nclass LocalStream {\n  constructor(options) {\n    this.config = _utils_config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n    this.env = _utils_env_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n    this.log = _utils_logproxy__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n    this.name = this.__proto__.constructor.name;\n    this.defaultOptions = {\n      type: 'local',\n      id: null,\n      window: null\n    };\n    this.options = Object.assign({}, this.defaultOptions, options || {}); //创建视频\n\n    this.init();\n  }\n\n  init() {\n    if (!!this.env.isSupport === void 0) {\n      this.log.warn('该浏览器对于视频直播支持上存在问题，请检查！');\n      return;\n    }\n\n    const broswerInfo = this.env.detectBroswer(window);\n    this.log.info('浏览器信息：', broswerInfo); //创建本地流读取对象\n\n    this.userMedia = new _usermedia__WEBPACK_IMPORTED_MODULE_3__[\"default\"](window);\n  }\n  /**\n   * \n   * @param {*} options \n   */\n\n\n  async getUserMedia() {\n    this.options.streamType = 'desktop';\n    const devices = this.userMedia.UserMedia && this.userMedia.UserMedia.enumerateDevices(); //设定麦克风\n\n    console.log(devices);\n    const userStream = await this.userMedia.getUserMedia(this.constraints);\n    return userStream;\n  }\n\n  async getDesktop() {\n    const screenStream = this.userMedia.getDisplayMedia(this.constraints);\n    return screenStream;\n  }\n\n  get constraints() {\n    const csts = {\n      video: {\n        width: 1024,\n        heigth: 728,\n        frameRate: {\n          ideal: 60,\n          min: 10\n        }\n      },\n      audio: true\n    };\n    return csts;\n  }\n\n  addEvent() {\n    this.peer.onnegotiationneeded = () => {\n      this.onRTCOpen();\n    };\n\n    this.peer.ondatachannel = evt => {\n      this.onChannel(evt);\n    };\n\n    this.peer.onicecandidate = evt => {\n      this.onIceCandidate(evt);\n    };\n  }\n\n  removeEvent() {\n    this.peer.onnegotiationneeded = null;\n    this.peer.ondatachannel = null;\n    this.peer.onicecandidate = null;\n  }\n\n  destroy() {\n    this.config = null;\n    this.env = null;\n    this.log = null;\n    this.name = null;\n    this.removeEvent();\n    this.peer = null;\n    this.userMedia = null;\n    this.defaultOptions = null;\n    this.options = null;\n  }\n\n}\n\n//# sourceURL=webpack:///./public/src/webrtc/stream.js?");

/***/ }),

/***/ "./public/src/webrtc/usermedia.js":
/*!****************************************!*\
  !*** ./public/src/webrtc/usermedia.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return UserMedia; });\n/* harmony import */ var _utils_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/env */ \"./public/src/utils/env.js\");\n/* harmony import */ var _utils_logproxy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/logproxy */ \"./public/src/utils/logproxy.js\");\n\n\nclass UserMedia {\n  constructor(window) {\n    this.window = window;\n    this.env = _utils_env__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n    this.log = _utils_logproxy__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n    this.name = this.__proto__.constructor.name;\n    this.log.info(`[${this.name}]::'检查是否支持getUserMedia：${!!this.env.isSupport}`);\n    this.UserMedia = this.env.getAPI('MediaDevices') || this.env.getAPI('UserMedia');\n    this.stream = null;\n  }\n\n  getSupportedConstraints(um) {\n    return um.getSupportedConstraints();\n  }\n\n  async getUserMedia(constraints) {\n    if (!this.UserMedia) {\n      this.log.error(`[${this.name}]::getUserMedia API is not exit!`);\n      return;\n    }\n\n    this.log.info(`[${this.name}::getDisplayMedia mediaType ${this.UserMedia.constructor.name}`);\n\n    if (this.UserMedia.constructor.name.includes('UserMedia')) {\n      this.UserMedia = {\n        getUserMedia: this.UserMedia\n      };\n    }\n\n    this.stream = await this.UserMedia.getUserMedia(constraints);\n    return {\n      stream: this.stream,\n      type: 'camara'\n    };\n  }\n\n  async getDisplayMedia(constraints) {\n    if (!this.UserMedia) {\n      this.log.error(`[${this.name}]::getUserMedia API is not exit!`);\n      return;\n    }\n\n    this.log.info(`[${this.name}::getDisplayMedia mediaType ${this.UserMedia.constructor.name}`);\n\n    if (this.UserMedia.constructor.name.includes('UserMedia')) {\n      return;\n    }\n\n    this.stream = await this.UserMedia.getDisplayMedia(constraints);\n    return {\n      stream: this.stream,\n      type: 'desktop'\n    };\n  }\n\n  close() {\n    if (this.stream) {\n      this.stream.close();\n      this.stream = null;\n    }\n\n    this.log.trace(`${this.name}::close`);\n  }\n\n  destroy() {\n    this.close();\n    this.window = null;\n    this.UserMedia = null;\n    this.log = null;\n    this.defaultOptions = null;\n    this.name = null;\n  }\n\n}\n\n//# sourceURL=webpack:///./public/src/webrtc/usermedia.js?");

/***/ })

/******/ });